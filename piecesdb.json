{"assets":[{"title":"Script commands for Node.js server and client development","id":"7430cade-b72c-48ad-9915-6cc9f6651119","type":"CODE","raw":"\"scripts\": {\n    \"start\": \"node backend/server.js\",\n    \"server\": \"nodemon backend/server.js\",\n    \"client\": \"npm run  --prefix frontend\",\n    \"dev\": \"concurrently \\\"npm run server\\\" \\\"npm run client\\\"\",\n    \"data:import\": \"node backend/seeder\",\n    \"data:destroy\": \"node backend/seeder -d\",\n    \"build\": \"npm install && npm install --prefix frontend && npm run build --prefix frontend\",\n    \"generate-toc\": \"markdown-toc -i readme.md\"\n  },","language":"json","time":"a day ago","created":"2023-10-30T04:37:06.572Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"2dbc62c8-003e-4b54-b5e4-f698de6ade69","created":{"value":"2023-10-30T04:37:18.315Z","readable":"a day ago"},"updated":{"value":"2023-10-30T04:37:18.315Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"7430cade-b72c-48ad-9915-6cc9f6651119"},"type":"DESCRIPTION","text":"This code snippet defines various scripts for running and managing a Node.js application. These scripts include starting the server, running the server with nodemon for automatic restarts, running the client, running both the server and client concurrently, importing and destroying data,","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3e7ed4d5-8aff-46a1-9259-00884299208d","created":{"value":"2023-10-30T04:37:07.527Z","readable":"a day ago"},"updated":{"value":"2023-10-30T04:37:07.527Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"7430cade-b72c-48ad-9915-6cc9f6651119"},"type":"DESCRIPTION","text":"This is a configuration file for the Node.js package, including server and client scripts, using npm install or build commands to generate markdown-toc in Markdown mode.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-30T05:30:16.843Z","share":"https://2b43473c-2a19-4c71-80e3-133b3144969f.pieces.cloud/?p=454b42afd4"},{"title":"MongoDB Database Connection Setup.","id":"83686f69-1074-45fb-80db-81d74aeee704","type":"CODE","raw":"const mongoose = require('mongoose');\r\n\r\n\r\nconst connectDatabase = () => {\r\n    mongoose.connect(process.env.DB_URI, {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n        useCreateIndex: true\r\n    }).then(con => {\r\n        console.log(`MongoDB Database connected with HOST: ${con.connection.host}`)\r\n    })\r\n}\r\n\r\nmodule.exports = connectDatabase","language":"js","time":"6 days ago","created":"2023-10-26T02:58:03.552Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3d17c8b3-8ff0-4fe6-88d1-24ece54e53fa","created":{"value":"2023-10-26T02:58:25.418Z","readable":"6 days ago"},"updated":{"value":"2023-10-26T02:58:25.418Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"83686f69-1074-45fb-80db-81d74aeee704"},"type":"DESCRIPTION","text":"This code snippet exports a function called `connectDatabase` that connects to a MongoDB database using the provided URI. It uses the Mongoose library and logs a message to the console when the connection is successful.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"db77a125-205d-498c-9eeb-c7ec38e4cb22","created":{"value":"2023-10-26T02:58:05.344Z","readable":"6 days ago"},"updated":{"value":"2023-10-26T02:58:05.344Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"83686f69-1074-45fb-80db-81d74aeee704"},"type":"DESCRIPTION","text":"This code connects to a MongoDB database using the Mongoose library, and logs an error message if successful.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-26T05:37:43.744Z","share":"https://2b43473c-2a19-4c71-80e3-133b3144969f.pieces.cloud/?p=a381449d11"},{"title":"Filter out a company from an array.","id":"33348cfd-149b-4323-a68f-8e13e5dd4189","type":"CODE","raw":"const companies = [\"Apple\", \"Samsung\", \"Nokia\", \"HTC\", \"Xiaomi\"];\n\nconst newCompanies = companies.filter(item => item !== \"HTC\")\nconsole.log(companies); // [\"Apple\", \"Samsung\", \"Nokia\", \"Xiaomi\"]","language":"ts","time":"7 days ago","created":"2023-10-25T03:04:26.949Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"32b6fd6f-7c21-459f-ab87-ca8a0ce1d683","created":{"value":"2023-10-25T03:04:40.162Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:04:40.162Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"33348cfd-149b-4323-a68f-8e13e5dd4189"},"type":"DESCRIPTION","text":"The code snippet removes the element \"HTC\" from the array \"companies\" and assigns the filtered array to \"newCompanies\". It then logs the original array \"companies\" to the console.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"586881e3-cd13-4559-8c47-9a6e818fda95","created":{"value":"2023-10-25T03:04:26.949Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:04:26.949Z","readable":"7 days ago"},"mechanism":"MANUAL","asset":{"id":"33348cfd-149b-4323-a68f-8e13e5dd4189"},"type":"DESCRIPTION","text":"[Javascript] Các cách xóa phần tử trong mảng (Array)\n\nMình xin chia sẻ một số phương pháp xóa phần tử trong mảng javascript. Array trong javascript là một trong những loại dữ liệu thường xuyên sử dụng nhất"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"cf2822b1-527b-4824-9541-36c8ee0f536d","created":{"value":"2023-10-25T03:04:28.024Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:04:28.024Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"33348cfd-149b-4323-a68f-8e13e5dd4189"},"type":"DESCRIPTION","text":"This code filters out all non-HTC items in a list and logs them to the console. The new companies are filtered by \"HTC\".","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-25T05:45:51.936Z"},{"title":"Remove HTC from an array of phone companies.","id":"a29351bb-ac9d-4097-8751-2c28a3be45fc","type":"CODE","raw":"// Bạn có một mảng các object các hãng điện thoại. Bạn muốn xóa hãng HTC khỏi mảng\nconst companies = [\"Apple\", \"Samsung\", \"Nokia\", \"HTC\", \"Xiaomi\"];\n\n// Tìm index của phần tử có giá trị \"HTC\"\nconst removeIndex = companies.findIndex((item) => item === \"HTC\");\n\n// Xóa phần tử HTC\ncompanies.splice(removeIndex, 1);\nconsole.log(companies); // [\"Apple\", \"Samsung\", \"Nokia\", \"Xiaomi\"]","language":"js","time":"7 days ago","created":"2023-10-25T03:04:16.544Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"03db900c-863b-47c6-8c10-8a251947ec67","created":{"value":"2023-10-25T03:04:16.544Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:04:16.544Z","readable":"7 days ago"},"mechanism":"MANUAL","asset":{"id":"a29351bb-ac9d-4097-8751-2c28a3be45fc"},"type":"DESCRIPTION","text":"[Javascript] Các cách xóa phần tử trong mảng (Array)\n\nMình xin chia sẻ một số phương pháp xóa phần tử trong mảng javascript. Array trong javascript là một trong những loại dữ liệu thường xuyên sử dụng nhất"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"65378293-5dea-4ac0-a774-cf9b4df7dd62","created":{"value":"2023-10-25T03:04:32.005Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:04:32.005Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"a29351bb-ac9d-4097-8751-2c28a3be45fc"},"type":"DESCRIPTION","text":"The code snippet removes the \"HTC\" company from an array of phone brands by finding its index and using the splice method to remove it. The updated array is then logged to the console.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"8786ac3b-0aba-49d4-a216-0e4a6f1e3ab3","created":{"value":"2023-10-25T03:04:18.273Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:04:18.273Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"a29351bb-ac9d-4097-8751-2c28a3be45fc"},"type":"DESCRIPTION","text":"The code removes the \"HTC\" item from a list of companies and logs it to the console.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-25T05:45:44.925Z"},{"title":"Array Shift: Removing the First Element","id":"384e3d34-52ea-4c8f-9f2a-3368b647bef5","type":"CODE","raw":"let array = ['zero', 'one', 'two', 'three']; \narray.shift();\nconsole.log(array); // [\"one\", \"two\", \"three\"]","language":"ts","time":"7 days ago","created":"2023-10-25T03:00:22.378Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"84248784-61f2-43ee-9976-bb6038fe82a8","created":{"value":"2023-10-25T03:00:22.378Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:00:22.378Z","readable":"7 days ago"},"mechanism":"MANUAL","asset":{"id":"384e3d34-52ea-4c8f-9f2a-3368b647bef5"},"type":"DESCRIPTION","text":"[Javascript] Các cách xóa phần tử trong mảng (Array)\n\nMình xin chia sẻ một số phương pháp xóa phần tử trong mảng javascript. Array trong javascript là một trong những loại dữ liệu thường xuyên sử dụng nhất"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"8bbc74d8-2371-4841-a188-57860ebda8a8","created":{"value":"2023-10-25T03:00:34.653Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:00:34.653Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"384e3d34-52ea-4c8f-9f2a-3368b647bef5"},"type":"DESCRIPTION","text":"The code snippet removes the first element from the array and then prints the updated array, which no longer contains the element that was removed.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"9518b274-4f5a-4c77-9af0-4b233061a6a3","created":{"value":"2023-10-25T03:00:23.589Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T03:00:23.589Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"384e3d34-52ea-4c8f-9f2a-3368b647bef5"},"type":"DESCRIPTION","text":"This code removes the first element of an array and logs it to the console. The last element is printed as a string, which can be used for logging in any way that are not being logged","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-25T05:45:44.916Z"},{"title":"Array Pop: Remove Last Element and Print","id":"421c0dc0-9c98-45df-9bc0-362d02f79212","type":"CODE","raw":"let array = [1, 2, 3, 4]; \narray.pop();\nconsole.log(array); // [1, 2, 3]","language":"ts","time":"7 days ago","created":"2023-10-25T02:59:17.463Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"943ad7f1-0684-456e-8d8b-30144560fc71","created":{"value":"2023-10-25T02:59:30.324Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T02:59:30.324Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"421c0dc0-9c98-45df-9bc0-362d02f79212"},"type":"DESCRIPTION","text":"The code snippet removes the last element from the array and then prints the updated array, which now excludes the removed element.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"cec07966-102d-4df0-87ac-63f3f655607b","created":{"value":"2023-10-25T02:59:17.463Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T02:59:17.463Z","readable":"7 days ago"},"mechanism":"MANUAL","asset":{"id":"421c0dc0-9c98-45df-9bc0-362d02f79212"},"type":"DESCRIPTION","text":"[Javascript] Các cách xóa phần tử trong mảng (Array)\n\nMình xin chia sẻ một số phương pháp xóa phần tử trong mảng javascript. Array trong javascript là một trong những loại dữ liệu thường xuyên sử dụng nhất"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f1e81ff0-488e-4e68-b786-b8d7e84caa2d","created":{"value":"2023-10-25T02:59:18.462Z","readable":"7 days ago"},"updated":{"value":"2023-10-25T02:59:18.462Z","readable":"7 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"421c0dc0-9c98-45df-9bc0-362d02f79212"},"type":"DESCRIPTION","text":"This code removes the first element of an array and logs it to the console. The last element is then printed as a new array, which can be used for logging in different places.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-25T05:45:44.901Z"},{"title":"Create a static file server","id":"36be152d-e3a0-4605-b005-03440b0d6a03","type":"CODE","raw":"const fileSystem = require('fs');\nconst http = require('http');\n\nhttp.createServer((request, response) => {\n\tfileSystem.readFile(__dirname + request.url, (error, data) => {\n\t\tif (error) {\n\t\t\tresponse.writeHead(404, {\n\t\t\t\t'Content-Type': 'text/html'\n\t\t\t});\n\t\t\tresponse.end('404: File not found');\n\t\t} else {\n\t\t\tresponse.writeHead(200, {\n\t\t\t\t'Content-Type': 'text/html'\n\t\t\t});\n\t\t\tresponse.end(data);\n\t\t}\n\t});\n}).listen(8000);","language":"js","time":"20 days ago","created":"2023-10-11T04:28:42.775Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e72252f9-24dd-4cfe-9420-10e86571fce0","created":{"value":"2023-10-11T04:28:42.355Z","readable":"20 days ago"},"updated":{"value":"2023-10-11T04:28:42.355Z","readable":"20 days ago"},"mechanism":"MANUAL","asset":{"id":"36be152d-e3a0-4605-b005-03440b0d6a03"},"type":"DESCRIPTION","text":"Given a requested URL, the static file server will listen for requests and try to find a file on the local filesystem. If no file is found or it doesn’t exist, it returns a 404 error. The http module creates the server that listens on port 8000. From The Pieces Node.js Collection."}],"updated":"2023-10-25T05:45:44.884Z"},{"title":"AppProps Type Declaration","id":"cec6f87a-170e-4746-a310-3fc612f1eaea","type":"CODE","raw":"type AppProps = {\n  message: string;\n  count: number;\n  disabled: boolean;\n  names: string[];\n  status: \"waiting\" | \"success\";\n  obj: {\n    id: string;\n    title: string;\n  };\n  objArr: {\n    id: string;\n    title: string;\n  }[];\n  obj2: unknown;\n  obj3: Record<string, unknown>;\n  dict1: Record<string, MyTypeHere>;\n  dict2: Record<string, MyTypeHere>;\n  onClick: () => void;\n  onChange: (id: number) => void;\n  onChangeWithEvent: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onClickWithEvent: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSomething: () => void;\n  optional?: OptionalType;\n  setState: React.Dispatch<React.SetStateAction<number>>;\n};\n\n/**\n * Notes:\n * - Replaced \"object\" with \"unknown\" for obj2 as \"object\" type does not allow accessing properties, whereas \"unknown\" type does not allow accessing properties without type assertion.\n * - Replaced obj3 with Record<string, unknown> as it provides a similar structure (no required properties) but is more commonly used.\n * - Renamed the second onChange and onClick definitions with additional suffix \"WithEvent\" to avoid naming conflict.\n * - Replaced dict1 type with Record<string, MyTypeHere> which is equivalent to dict2.\n**/\n\n// Example usage:\nconst props: AppProps = {\n  message: \"Hello\",\n  count: 5,\n  disabled: false,\n  names: [\"Alice\", \"Bob\"],\n  status: \"waiting\",\n  obj: {\n    id: \"123\",\n    title: \"Example\"\n  },\n  objArr: [\n    { id: \"1\", title: \"Item 1\" },\n    { id: \"2\", title: \"Item 2\" }\n  ],\n  obj2: {},\n  obj3: {},\n  dict1: {\n    key1: value1,\n    key2: value2\n  },\n  dict2: {\n    key1: value1,\n    key2: value2\n  },\n  onClick: () => {\n    console.log(\"Button clicked\");\n  },\n  onChange: (id) => {\n    console.log(\"Value changed:\", id);\n  },\n  onChangeWithEvent: (event) => {\n    console.log(\"Input changed:\", event.target.value);\n  },\n  onClickWithEvent: (event) => {\n    console.log(\"Button clicked:\", event.target);\n  },\n  onSomething: () => {\n    console.log(\"Something happened\");\n  },\n  optional: \"Optional value\",\n  setState: (newValue) => {\n    console.log(\"State updated:\", newValue);\n  }\n};","language":"ts","time":"21 days ago","created":"2023-10-11T03:16:47.505Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"41925a80-4c65-40ff-b8d3-50091300d169","created":{"value":"2023-10-11T03:16:47.505Z","readable":"21 days ago"},"updated":{"value":"2023-10-11T03:16:47.505Z","readable":"21 days ago"},"mechanism":"MANUAL","asset":{"id":"cec6f87a-170e-4746-a310-3fc612f1eaea"},"type":"DESCRIPTION","text":"Typing Component Props\n\nThis is intended as a basic orientation and reference for React developers familiarizing with TypeScript."},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"84931174-74f7-4fd2-832e-aa5b2b5371ae","created":{"value":"2023-10-11T03:17:06.482Z","readable":"21 days ago"},"updated":{"value":"2023-10-11T03:17:06.482Z","readable":"21 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"cec6f87a-170e-4746-a310-3fc612f1eaea"},"type":"DESCRIPTION","text":"The code snippet defines the type of props that can be passed to a component in a React application. It includes various types such as strings, numbers, booleans, arrays, objects, functions, and optional props.","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"bee84aa2-bc93-434c-b64a-2646cd6e3468","created":{"value":"2023-10-11T03:16:49.723Z","readable":"21 days ago"},"updated":{"value":"2023-10-11T03:16:49.723Z","readable":"21 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"cec6f87a-170e-4746-a310-3fc612f1eaea"},"type":"DESCRIPTION","text":"This code defines a type object with properties such as message, count, disabled, and status. It also includes functions to set the state setter function for an event that can be triggered when changing or disposed of their types by calling React's SetStateAction() method on","model":{"id":"b0602842-873f-40a8-9f2a-d124c4c652fb"}}],"updated":"2023-10-25T05:45:44.872Z"}],"gptContexts":[],"gptFolderNames":[],"enrichedCode":{},"llmModelId":""}